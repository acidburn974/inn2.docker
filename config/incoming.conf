##  $Id: incoming.conf 10179 2017-09-18 20:13:48Z iulius $
##
##  incoming.conf -- Configuration of incoming news feeds
##
##  This file consists of three types of entries:  key/value, peer and group.
##  Comments are taken from the hash character "#" to the end of the line.
##  Blank lines are ignored.
##
##  Key/value entries are a keyword immediately followed by a colon, at least
##  one blank and a value.  For example:
##
##         max-connections: 10
##
##  A legal key contains neither blanks, nor colon, nor "#".
##  There are three different types of  values:  integers,  booleans, and strings.
##  Integers are as to be expected.  A boolean value is either "true" or
##  "false" (case is significant).  A string value is any other sequence of
##  characters.  If the string needs to contain whitespace, then it must be
##  quoted with double quotes.
##
##  Peer entries look like:
##
##          peer <name> {
##               # body
##          }
##
##  The word "peer" is required.  <name> is a label for this peer.  It is
##  any string valid as a key.  The body of a peer entry contains some number
##  of key/value entries.
##
##  Group entries look like:
##
##          group <name> {
##               # body
##          }
##
##  The word "group" is required.  <name> is any string valid as a key.
##  The body of a group entry contains any number of the three types of
##  entries.  So key/value pairs can be defined inside a group, and peers can
##  be nested inside a group, and other groups can be nested inside a group.
##
##  Key/value entries that are defined outside of all peer and group entries
##  are said to be at "global scope".  Global key/value entries act as
##  defaults for peers.  When innd looks for a specific value in a peer entry
##  (for example, the maximum number of connections to allow), if the value
##  is not defined in the peer entry, then the enclosing groups are examined
##  for the entry (starting at the closest enclosing group).  If there are no
##  enclosing groups, or the enclosing groups don't define the key/value,
##  then the value at global scope is used.
##
##  A small example could be:
##
##      # Global value applied to all peers that have no value of their own.
##      max-connections: 5
##
##      # A peer definition.
##      peer uunet {
##          hostname: usenet1.uu.net
##      }
##
##      peer vixie {
##          hostname: gw.home.vix.com
##          max-connections: 10        # Override global value.
##      }
##
##      # A group of two peers which can open more connections than normal.
##      group fast-sites {
##          max-connections: 15
##
##          # Another peer.  The max-connections: value from the
##          # fast-sites group scope is used.
##          peer data.ramona.vix.com {
##              hostname: data.ramona.vix.com
##          }
##
##          peer bb.home.vix.com {
##              hostname: bb.home.vix.com
##              max-connections: 20    # He can really cook.
##          }
##      }
##
##  Given the above configuration file, the defined peers would have the
##  following values for the max-connections: key.
##
##      uunet                  5
##      vixie                 10
##      data.ramona.vix.com   15
##      bb.home.vix.com       20
##
##  The following keys are allowed:
##
##  hostname:
##   This key is mandatory in a peer block.  The value is a string representing
##   a list of hostnames separated by a comma.  A hostname is either a FQDN
##   that resolves to the IPv4 or IPv6 address of the peer, or the dotted-quad
##   IP address of the peer for IPv4, or the colon-separated IP address of
##   the peer for IPv6.
##
##  streaming:
##   This key requires a boolean value.  It defines whether streaming commands
##   are allowed from this peer.  (default=true)
##
##  max-connections:
##   This key requires a positive integer value.  It defines the maximum number
##   of connections allowed.  A value of zero specifies an unlimited number
##   of maximum connections ("unlimited" or "none" can be used as synonyms).
##   (default=0)
##
##  hold-time:
##   This key requires a positive integer value.  It defines the hold time before
##   close, if the connection is over the max-connections: value.  A value of zero
##   specifies immediate close.  (default=0)
##
##  identd:
##   This key requires a string value.  It is used if you wish to require a
##   peer's user name retrieved through identd match the specified string.
##   (unset by default, that is to say no identd)
##
##  password:
##   This key requires a string value.  It is used if you wish to require a peer
##   to supply a password.  (unset by default, that is to say no password)
##
##  patterns:
##   This key requires a string value.  It is a list of newsfeeds(5)-style list
##   of newsgroups which are to be accepted from this host.  (default="*")
##
##  email:
##   This key requires a string value.  Reserved for future use.  (empty by default)
##
##  comment:
##   This key requires a string value.  Reserved for future use.  (empty by default)
##
##  skip:
##   This key requires a boolean value.  Setting this entry causes this peer
##   to be skipped.  (default=false)
##
##  ignore:
##   This key requires a boolean value.  Setting this entry causes innd to
##   refuse every article sent via CHECK or IHAVE by this peer.  (default=false)
##
##  noresendid:
##   This key requires a boolean value.  It defines whether innd should send
##   "431" (response to CHECK, in streaming mode) or "436" (response to IHAVE
##   in non-streaming mode) responses instead of "438" (response to CHECK)
##   or "435" (response to IHAVE) if a message is offered that is already
##   received from another peer.  This can be useful for peers that resend
##   messages right away, as innfeed does.  (default=false)
##
##  nolist:
##   This key requires a boolean value.  It defines whether a peer is allowed
##   to issue list command.  (default=false, that is to say it can)
##

streaming:          true   # Streaming allowed by default.
max-connections:    8      # Per feed.

peer ME {
  hostname:         "localhost, 127.0.0.1, ::1"
}
